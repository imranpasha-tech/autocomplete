{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/autocomplete/autocomplete.component.ts","./src/app/autocomplete/autocomplete.component.html","./src/app/autocomplete/service/autocomplete.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'autocomplete-angular';\n}\n","<app-autocomplete></app-autocomplete>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AutocompleteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AutocompleteService } from './service/autocomplete.service';\nimport { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { schools } from './schools';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css']\n})\nexport class AutocompleteComponent implements OnInit {\n  @ViewChild('input', { static: true }) input: ElementRef;\n  schools: schools[];\n  text: string;\n\n  constructor(private autocompleteService: AutocompleteService) {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  autocomplete(event) {\n    console.log(event);\n    this.schools = [];\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\n      console.log(event.key);\n\n      this.autocompleteService.getSuggestions(event.key).subscribe(\n        response => {\n          console.log(\"response is: \", response);\n          this.schools = response;\n        }\n      );\n    }\n\n    if (event.keyCode == 8) {\n      this.schools = [];\n      console.log(this.input.nativeElement.value);\n      let text = this.input.nativeElement.value;\n\n      if (text != \"\") {\n        console.log(\"not empty\");\n        this.autocompleteService.getSuggestions(this.input.nativeElement.value).subscribe(\n          response => {\n            console.log(\"response is: \", response);\n            this.schools = response;\n          }\n        );\n      } else {\n        this.schools = [];\n      }\n\n    }\n  }\n}\n","<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Type Ahead</title>\n</head>\n<body bgcolor=\"#ffc600\">\n  <h4>Search for Schools</h4>\n  <form class=\"autocomplete-form\">\n    <input #input type=\"text\" class=\"search\" placeholder=\"City or State\" (keyup)=\"autocomplete($event)\" (change)=\"autocomplete($event)\">\n    <ul class=\"suggestions\">\n     <li *ngFor=\"let school of schools\">{{ school.city }}</li>\n     \n    </ul>\n  </form>\n</body>\n</html>","import { schools } from './../schools';\nimport { HttpClientModule, HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutocompleteService {\n  endpoint : string = \"http://localhost:3030/autocomplete\";\n  constructor(private httpClient: HttpClient) { \n    \n  }\n\n  getSuggestions(keyword:string)  {\n    const params = new HttpParams()\n    .set('keyword', keyword)\n\n    return this.httpClient.get<schools[]>(this.endpoint, {params});\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}